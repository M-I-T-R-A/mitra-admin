[{"E:\\save\\malay\\WORK\\CF session\\WebD-AtoZ-master\\src\\AllCustomers.js":"1","E:\\save\\malay\\WORK\\CF session\\WebD-AtoZ-master\\src\\AcceptLoan.js":"2"},{"size":1669,"mtime":1613223637294,"results":"3","hashOfConfig":"4"},{"size":5115,"mtime":1613223710047,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mr5mwx",{"filePath":"8","messages":"9","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"E:\\save\\malay\\WORK\\CF session\\WebD-AtoZ-master\\src\\AllCustomers.js",[],"E:\\save\\malay\\WORK\\CF session\\WebD-AtoZ-master\\src\\AcceptLoan.js",["11","12","13","14","15","16","17","18","19","20"],"import React, { useEffect, useState } from 'react'\r\nimport { Typography, CircularProgress } from '@material-ui/core';\r\nimport FeedCard from './FeedCard';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    mediaRoot: {\r\n        maxWidth: 345,\r\n    }\r\n}));\r\n\r\n\r\nfunction AcceptLoan({ match }) {\r\n    const {\r\n        params: { id }\r\n    } = match;\r\n    const classes = useStyles();\r\n\r\n    //const [startDate, setStartDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n    //const [endDate, setEndDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n    const [approvedLoan, setApprovedLoan] = useState({\r\n        approvedAmount: 0.0,\r\n        rateOfInterest: 0.0,\r\n        timeFactor: 0.0,\r\n        startDate: \"2000-10-10\",\r\n        endDate: \"2000-10-10\"\r\n    });\r\n\r\n    const handleStartDateChange = (date) => {\r\n        setApprovedLoan({\r\n            ...approvedLoan,\r\n            startDate: date\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        setApprovedLoan({\r\n            ...approvedLoan,\r\n            endDate: date\r\n        });\r\n    };\r\n\r\n    const updateField = e => {\r\n        setApprovedLoan({\r\n            ...approvedLoan,\r\n            [e.target.name]: e.target.value\r\n        });\r\n        console.log(approvedLoan);\r\n    };\r\n\r\n    const submitLoanApplication = () => {\r\n        axios.post(`http://20.198.81.29:5000/admin/customer/approve/${id}`, approvedLoan) //'http://localhost:8000' 'https://bharatdebtrelief-backend.herokuapp.com'\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'center', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-around' }}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <h3>Loan Grant Form</h3>\r\n                            <form className={classes.root} noValidate autoComplete=\"off\" >\r\n                                <TextField id=\"outlined-basic\" label=\"Approved Amount\" variant=\"outlined\" name=\"approvedAmount\" onChange={updateField}/>\r\n                                <br></br><br></br><TextField id=\"outlined-basic\" label=\"Rate of Interest\" variant=\"outlined\" name=\"rateOfInterest\"  onChange={updateField}/>\r\n                                <br></br><br></br><TextField id=\"outlined-basic\" label=\"Time factor\" variant=\"outlined\" name=\"timeFactor\"  onChange={updateField}/>\r\n                                <br></br><br></br><TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"Start Date\"\r\n                                    type=\"date\"\r\n                                    onChange={updateField}\r\n                                    defaultValue=\"2021-01-01\"\r\n                                    name=\"startDate\"\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                                <br></br><br></br><TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"End Date\"\r\n                                    type=\"date\"\r\n                                    onChange={updateField}\r\n                                    defaultValue=\"2021-01-01\"\r\n                                    name=\"endDate\"\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                /><br></br><br></br>\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={submitLoanApplication} component={Link} to={`/customers`}>Approve</Button>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default AcceptLoan;",{"ruleId":"21","severity":1,"message":"22","line":1,"column":17,"nodeType":"23","messageId":"24","endLine":1,"endColumn":26},{"ruleId":"21","severity":1,"message":"25","line":2,"column":10,"nodeType":"23","messageId":"24","endLine":2,"endColumn":20},{"ruleId":"21","severity":1,"message":"26","line":2,"column":22,"nodeType":"23","messageId":"24","endLine":2,"endColumn":38},{"ruleId":"21","severity":1,"message":"27","line":3,"column":8,"nodeType":"23","messageId":"24","endLine":3,"endColumn":16},{"ruleId":"21","severity":1,"message":"28","line":12,"column":8,"nodeType":"23","messageId":"24","endLine":12,"endColumn":20},{"ruleId":"21","severity":1,"message":"29","line":14,"column":5,"nodeType":"23","messageId":"24","endLine":14,"endColumn":28},{"ruleId":"21","severity":1,"message":"30","line":15,"column":5,"nodeType":"23","messageId":"24","endLine":15,"endColumn":23},{"ruleId":"21","severity":1,"message":"31","line":16,"column":5,"nodeType":"23","messageId":"24","endLine":16,"endColumn":23},{"ruleId":"21","severity":1,"message":"32","line":57,"column":11,"nodeType":"23","messageId":"24","endLine":57,"endColumn":32},{"ruleId":"21","severity":1,"message":"33","line":64,"column":11,"nodeType":"23","messageId":"24","endLine":64,"endColumn":30},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'CircularProgress' is defined but never used.","'FeedCard' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'handleStartDateChange' is assigned a value but never used.","'handleEndDateChange' is assigned a value but never used."]