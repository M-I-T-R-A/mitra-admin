[{"E:\\Mitra\\mitra-admin\\src\\tabs\\Tab1.js":"1","E:\\Mitra\\mitra-admin\\src\\Profile.js":"2"},{"size":3972,"mtime":1613145014272,"results":"3","hashOfConfig":"4"},{"size":2476,"mtime":1613145069804,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ca30v9",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"E:\\Mitra\\mitra-admin\\src\\tabs\\Tab1.js",[],"E:\\Mitra\\mitra-admin\\src\\Profile.js",["11","12"],"import React, { useEffect, useState } from 'react'\r\nimport { Typography, CircularProgress } from '@material-ui/core';\r\nimport FeedCard from './FeedCard';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nfunction Profile({ match }) {\r\n    const {\r\n        params: { id }\r\n    } = match;\r\n\r\n    const [customer, setCustomer] = useState(null);\r\n    const [loanId, setLoanId] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        getCustomers();\r\n    }, [])\r\n\r\n    const getCustomers = async () => {\r\n        const res = await fetch(`http://20.198.81.29:5000/admin/customer/${id}`)\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setCustomer(data);\r\n        const res2 = await fetch(`http://20.198.81.29:5000/customer/loan/instant/current/${id}`);\r\n        const data2 = await res2.json();\r\n        console.log(data2);\r\n        setLoanId(data2.id);\r\n    }\r\n\r\n    const reject = async () => {\r\n        const res2 = await fetch(`http://20.198.81.29:5000/admin/customer/reject/${loanId}`)\r\n    }\r\n\r\n    if (!customer) return (\r\n        <div style={{ display: 'inline', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-around', height: '100vh' }}>\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n    else {\r\n        return (\r\n            <div>\r\n                <div style={{ display: 'inline', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-around' }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                <p>Profile</p>\r\n                                <Button variant=\"contained\" color=\"primary\" component={Link} to={`/applications/accept/${loanId}`}>Consider</Button>\r\n                                <Button variant=\"contained\" color=\"red\" component={Link} to={`/applications`} onClick={reject}>Reject</Button>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-around' }}>\r\n                    <FeedCard\r\n                        data={customer}\r\n                    />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;",{"ruleId":"13","severity":1,"message":"14","line":21,"column":8,"nodeType":"15","endLine":21,"endColumn":10,"suggestions":"16"},{"ruleId":"17","severity":1,"message":"18","line":35,"column":15,"nodeType":"19","messageId":"20","endLine":35,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.","ArrayExpression",["21"],"no-unused-vars","'res2' is assigned a value but never used.","Identifier","unusedVar",{"desc":"22","fix":"23"},"Update the dependencies array to be: [getCustomers]",{"range":"24","text":"25"},[546,548],"[getCustomers]"]